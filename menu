#!/bin/bash
function print_menu()  # the args are selected_item and all the items
# print_menu() $selected_item $array
{
	local function_arguments=($@)
	local selected_item="$1"
	local menu_items=(${function_arguments[@]:1}) #array starting from index 1
	local menu_size="${#menu_items[@]}"

	for (( i = 0; i < $menu_size; ++i ))
	do
		if [ "$i" = "$selected_item" ]
		then
			echo -e "\033[0;36m-> ${menu_items[$i]}\e[0m"
		else
			echo -e "   ${menu_items[$i]}"
		fi
	done
}
function run_menu()  # selected_item, ...menu_items
{
	local function_arguments=($@)

	local selected_item="$1"
	local menu_items=(${function_arguments[@]:1})
	local menu_size="${#menu_items[@]}"
	local menu_limit=$((menu_size - 1))

	clear
	print_menu "$selected_item" "${menu_items[@]}"

	while read -rsn1 input #!!!!! 
	do
		case "$input"
		in
			$'\x1B') # ESC KEY
				read -rsn1 -t 0.1 input 
				if [ "$input" = "[" ]  # occurs before arrow code
				then                                     # ESCAPE SEQUENCE : SEQUENCE DE CODE QUI DEBUTE
					read -rsn1 -t 0.1 input          # AVEC "\x1B" (qui est la representation de ESC KEY)
					case "$input"                    #ET INDIQUE NON PRINTABLE CARACTERS (PRT SCR ARROWS...)
					in
						A)  # Up Arrow
							if [ "$selected_item" -ge 1 ]
							then
								selected_item=$((selected_item - 1))
								clear
								print_menu "$selected_item" "${menu_items[@]}"
							fi
							;;
						B)  # Down Arrow
							if [ "$selected_item" -lt "$menu_limit" ]
							then
								selected_item=$((selected_item + 1))
								clear
								print_menu "$selected_item" "${menu_items[@]}"
							fi
							;;
					esac
				fi
				read -rsn5 -t 0.1  # flushing stdin
				;;
			"")  # Enter key
				return "$selected_item"
				;;
		esac
	done
}
main_menu()
{
space=$(echo -e "\u200A") #BLANK CARACTER (USED TO FIX A CURRENT PROBLEM WITH NORMAL SPACES IN THE MENU)	
selected_item=0

menu_items=(
    "üíæ${space}Start${space}Backup"
    "üìñ${space}Restore${space}Backup"
    "üìë${space}Move${space}Source${space}Directory"
    "üöÆ${space}Delete${space}All${space}Backups"
    "üìú${space}View${space}Logs"
    "üìù${space}View${space}Properties"
    "‚¨ÖÔ∏è${space}${space}Go${space}Back"
    "üèÅ${space}Exit")
 
run_menu "$selected_item" "${menu_items[@]}"
menu_result="$?"
echo
case "$menu_result" in
    0)
        echo -e "0 selected"
        ;;
    1)
        echo -e "1 selected"
        ;;
    2)
        echo -e "2 selected"
        ;;
    3)
        echo -e "3 selected"
        ;;
    4)
        echo -e "4 selected"
        ;;
    5)
        echo -e "5 selected"
        ;;
    6)
        echo -e "6 selected"
        ;;
    7)
        echo "Exit item selected"
        ;;
esac

}
center() {
    termwidth=$(tput cols)
    padding="$(printf '%0.1s' -{1..500})"
    printf '%*.*s %s %*.*s\n' 0 "$(((termwidth-2-${#1})/2))" "$padding" "$1" 0 "$(((termwidth-1-${#1})/2))" "$padding"
}
